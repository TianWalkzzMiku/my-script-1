#!/usr/bin/env bash
# Copyright Â©2021 - 2022 XSans02

set -eo pipefail

# Function to show an informational message
msg() {
    echo -e "\e[1;32m$*\e[0m"
}

err() {
    echo -e "\e[1;41m$*\e[0m"
}

# Set a directory
DIR="$(pwd)"

# Build LLVM
msg "* Building LLVM..."
./build-llvm.py \
	--clang-vendor "WeebX" \
	--projects "clang;lld;polly" \
	--targets "ARM;AArch64;X86" \
	--shallow-clone \
	--incremental \
    --lto full \
	--update \
    --no-ccache \
	--build-type "Release" 2>&1

# Verify clang get built
[ ! -f install/bin/clang-1* ] && {
	err "* LLVM Building Failed"
	exit 1
}

# Build binutils
msg "* Building binutils..."
./build-binutils.py \
    --update \
	--targets arm aarch64 x86_64

# Remove unused products
msg "* Removing unused products..."
rm -fr install/include
rm -f install/lib/*.a install/lib/*.la

# Strip remaining products
msg "* Stripping remaining products..."
for f in $(find install -type f -exec file {} \; | grep 'not stripped' | awk '{print $1}'); do
	strip ${f: : -1}
done

# Set executable rpaths so setting LD_LIBRARY_PATH isn't necessary
msg "* Setting library load paths for portability..."
for bin in $(find install -mindepth 2 -maxdepth 3 -type f -exec file {} \; | grep 'ELF .* interpreter' | awk '{print $1}'); do
	# Remove last character from file output (':')
	bin="${bin: : -1}"

	echo "$bin"
	patchelf --set-rpath '$DIR/../lib' "$bin"
done

# Set Commit Author
git config --global user.name "${GIT_USERNAME}"
git config --global user.email "${GIT_EMAIL}"

# Setup Release Repository
msg "* Clone repository..."
git clone https://${GIT_USERNAME}:${GIT_PASS}@${GIT_REPO} product
rm -rf product/*
mv install/* product/

# Release
msg "* Release..."
cd product
git add -A
git commit -asm "Clang: $(TZ=Asia/Jakarta date "+%Y%m%d") Build"
git push -f